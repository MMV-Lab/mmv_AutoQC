# @package _global_

# to execute this experiment run:
# python run.py experiment=example_full.yaml

defaults:
  - override /trainer: default.yaml # override trainer to null so it's not loaded from main config defaults...
  - override /model: DDPM_2D_patched.yaml
  - override /datamodule: DNA.yaml
datamodule:
  cfg:
    imageDim: [192, 192, 1]
model:
  cfg:
    test_timesteps: 50
    dim_mults: [1,2,2]
    unet_dim: 128
    objective: pred_x0
    loss: l1+ssim
    residualmode: l1+ssim
    alpha: 0.5
    OpenaiUnet: True # use openai unet
    conv_resample: True
    noisetype: simplex # simplex or none (Gaussian by default) or coarse
    noise_std: 0.2 # noise std for coarse noise
    noise_res: 16 # resolution of coarse noise
    dropout_unet: 0.0  
    patch_size: 96 # size of the patches
    grid_boxes: True # sample boxes from a fixed grid
    inpaint: True # solve inpainting task -- Loss calculation only for the patched region
num_folds: 1
logger:
  wandb:
    project: Cell_AutoQC

ckpt_path: best 

trainer:
  max_epochs: 300
  precision: 32 

name : pddpm_cell_benchmark_crop_192_simplex_l1ssim_alpha_0.5_t_50_300_epochs
seed: 3141
